#summary Frequently Asked Questions

== 1. Do I have to implement hashCode() for beans that are used as arguments for @Cacheable/@TriggersRemove methods? ==

Example: {{{

class MyBean {
  private String field1;
  private String field2;
   ....
}
interface MyDao {
  OtherObject getOtherObject(MyBean bean);
}

}}}

Technically no, however we strongly recommend that you do.
If you do not wish to implement hashCode on beans like MyBean, you will need to use
the ReflectionHashCodeCacheKeyGenerator, which uses reflection to generate a hashCode from the fields in your class. This carries a steep performance penalty however on cache key generation: the default CacheKeyGenerator, HashCodeCacheKeyGenerator, is more than 100 times faster than the ReflectionHashCodeCacheKeyGenerator.

*Many IDEs have the capability to automatically generate proper equals() and hashCode() implementations for your Java beans, we strongly recommend using this feature.*